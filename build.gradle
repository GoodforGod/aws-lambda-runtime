plugins {
    id "jacoco"
    id "java-library"
    id "maven-publish"

    id "org.sonarqube" version "3.3"
    id "com.diffplug.spotless" version "6.1.0"
}

group = groupId
version = artifactVersion

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

subprojects {
    apply plugin: "jacoco"
    apply plugin: "java-library"
    apply plugin: "maven-publish"
    apply plugin: "org.sonarqube"
    apply plugin: "com.diffplug.spotless"

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    }

    group = groupId
    version = artifactVersion

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17

    configurations {
        all {
            resolutionStrategy {
                cacheChangingModulesFor 0, "seconds" // check for updates every build
            }
        }
    }

    spotless {
        java {
            encoding("UTF-8")
            importOrder()
            removeUnusedImports()
            eclipse("4.21.0").configFile("${rootDir}/config/codestyle.xml")
        }
    }

    test {
        useJUnitPlatform()
        testLogging {
            events("passed", "skipped", "failed")
            exceptionFormat("full")
        }

        reports {
            html.enabled(false)
            junitXml.enabled(false)
        }
    }

    jar.enabled(true)

    tasks.withType(JavaCompile) {
        options.encoding("UTF-8")
        options.incremental(true)
        options.fork = true
    }

    check.dependsOn jacocoTestReport
    jacocoTestReport {
        reports {
            xml.enabled true
            html.destination file("${buildDir}/jacocoHtml")
        }
    }

    javadoc {
        options.encoding = "UTF-8"
        if (JavaVersion.current().isJava9Compatible()) {
            options.addBooleanOption("html5", true)
        }
    }

    if (project.hasProperty("signing.keyId")) {
        apply plugin: "signing"
        signing {
            sign publishing.publications.mavenJava
        }
    }
}