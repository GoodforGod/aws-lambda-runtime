dependencies {
    annotationProcessor "io.goodforgod:graalvm-hint-processor:0.19.0"
    compileOnly "io.goodforgod:graalvm-hint-annotations:0.19.0"

    implementation "javax.inject:javax.inject:1"
    implementation "org.jetbrains:annotations:23.0.0"
    implementation "io.goodforgod:gson-configuration:1.4.2"

    api "io.goodforgod:aws-lambda-java-events:2.0.0-SNAPSHOT"
    api "io.goodforgod:http-common:1.0.0-SNAPSHOT"
    api "com.amazonaws:aws-lambda-java-core:1.2.1"
    api "org.slf4j:slf4j-api:1.7.36"

    testAnnotationProcessor "io.goodforgod:graalvm-hint-processor:0.19.0"
    testImplementation "io.goodforgod:graalvm-hint-annotations:0.19.0"

    testRuntimeOnly "io.goodforgod:slf4j-simple-logger:0.15.0"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.8.2"
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.8.2"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.8.2"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            pom {
                name = "Simple AWSLambda"
                url = "https://github.com/GoodforGod/$artifactId"
                description = "Fastest, Lightweight and GraalVM optimized AWS Lambda Runtime."

                license {
                    name = "Apache License 2.0"
                    url = "https://github.com/GoodforGod/$artifactId/blob/master/LICENSE"
                    distribution = "repo"
                }

                developer {
                    id = "GoodforGod"
                    name = "Anton Kurako"
                    email = "goodforgod.dev@gmail.com"
                    url = "https://github.com/GoodforGod"
                }

                scm {
                    connection = "scm:git:git://github.com/GoodforGod/${artifactId}.git"
                    developerConnection = "scm:git:ssh://GoodforGod/${artifactId}.git"
                    url = "https://github.com/GoodforGod/$artifactId/tree/master"
                }
            }
        }
    }

    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith("SNAPSHOT") ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username System.getenv("OSS_USERNAME")
                password System.getenv("OSS_PASSWORD")
            }
        }
    }
}
